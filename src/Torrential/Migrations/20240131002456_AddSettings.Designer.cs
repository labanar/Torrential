// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Torrential;

#nullable disable

namespace Torrential.Migrations
{
    [DbContext(typeof(TorrentialDb))]
    [Migration("20240131002456_AddSettings")]
    partial class AddSettings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("Torrential.TorrentConfiguration", b =>
                {
                    b.Property<string>("InfoHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompletedPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("DateCompleted")
                        .HasColumnType("TEXT");

                    b.Property<string>("DownloadPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("InfoHash");

                    b.ToTable("Torrents");
                });

            modelBuilder.Entity("Torrential.TorrentialSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.ComplexProperty<Dictionary<string, object>>("FileSettings", "Torrential.TorrentialSettings.FileSettings#FileSettings", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("CompletedPath")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("DownloadPath")
                                .IsRequired()
                                .HasColumnType("TEXT");
                        });

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });
#pragma warning restore 612, 618
        }
    }
}
